name: Test Custom Query Pack

on:
  push:
    paths:
      - '.github/codeql/**'
  pull_request:
    paths:
      - '.github/codeql/**'
  workflow_dispatch:

jobs:
  test-query-pack:
    name: Test Custom Query Pack
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: python
        
    - name: Test Query Pack Structure
      run: |
        echo "📋 Validating query pack structure..."
        PACK_PATH=".github/codeql/ryudes-python-email"
        
        # Check required files exist
        required_files=(
          "${PACK_PATH}/codeql-pack.yml"
          "${PACK_PATH}/queries"
        )
        
        for file in "${required_files[@]}"; do
          if [ -e "$file" ]; then
            echo "✅ Found: $file"
          else
            echo "❌ Missing: $file"
            exit 1
          fi
        done
        
        # Check for .ql files
        ql_count=$(find "${PACK_PATH}/queries" -name "*.ql" | wc -l)
        echo "📊 Found $ql_count CodeQL query files"
        
        if [ $ql_count -eq 0 ]; then
          echo "❌ No .ql files found in queries directory"
          exit 1
        fi
        
    - name: Test Query Compilation
      run: |
        echo "🔨 Testing custom query compilation..."
        
        cd .github/codeql/ryudes-python-email
        
        # Install pack dependencies
        echo "📦 Installing pack dependencies..."
        codeql pack install || {
          echo "⚠️ Pack install failed, continuing with compilation test..."
        }
        
        # Test each query compiles
        compilation_results=()
        for query in queries/*.ql; do
          if [ -f "$query" ]; then
            query_name=$(basename "$query")
            echo "Testing compilation of: $query_name"
            
            if codeql query compile "$query"; then
              echo "✅ $query_name compiled successfully"
              compilation_results+=("✅ $query_name")
            else
              echo "❌ $query_name failed to compile"
              compilation_results+=("❌ $query_name")
            fi
          fi
        done
        
        echo ""
        echo "📊 COMPILATION SUMMARY:"
        for result in "${compilation_results[@]}"; do
          echo "  $result"
        done
        
        # Check if any failed
        if echo "${compilation_results[*]}" | grep -q "❌"; then
          echo ""
          echo "❌ Some queries failed to compile"
          exit 1
        else
          echo ""
          echo "🎉 All queries compiled successfully!"
        fi
        
    - name: Create Minimal Test Database
      run: |
        echo "🗄️ Creating minimal test database..."
        
        # Create simple test source code
        mkdir -p test-src/
        cat > test-src/simple_test.py << 'EOF'
        # Simple test file for query validation
        import smtplib
        from email.mime.text import MIMEText
        
        def basic_email_function(recipient, subject):
            """Basic email function for testing"""
            msg = MIMEText("Hello World")
            msg['Subject'] = subject
            msg['To'] = recipient
            
            server = smtplib.SMTP('localhost')
            server.sendmail('from@test.com', [recipient], msg.as_string())
            server.quit()
            return "Email sent"
        EOF
        
        echo "✅ Created test source: test-src/simple_test.py"
        
        # Create CodeQL database
        echo "📊 Creating CodeQL database..."
        if codeql database create test-db --language=python --source-root=test-src/ --overwrite; then
          echo "✅ Test database created successfully"
        else
          echo "❌ Failed to create test database"
          exit 1
        fi
        
    - name: Test Custom Queries Against Database
      run: |
        echo "🧪 Testing custom queries against test database..."
        
        cd .github/codeql/ryudes-python-email
        test_results=()
        
        for query in queries/*.ql; do
          if [ -f "$query" ]; then
            query_name=$(basename "$query" .ql)
            echo "Testing query: $query_name"
            
            # Run query and check it doesn't error
            if codeql query run "$query" --database=../../../test-db --output="../../../test-${query_name}.bqrs"; then
              echo "✅ Query executed without errors"
              
              # Decode results
              if codeql bqrs decode "../../../test-${query_name}.bqrs" --format=csv --output="../../../test-${query_name}.csv"; then
                result_count=$(tail -n +2 "../../../test-${query_name}.csv" 2>/dev/null | wc -l)
                echo "📊 Query returned $result_count results"
                test_results+=("✅ $query_name: $result_count results")
              else
                echo "⚠️ Could not decode results"
                test_results+=("⚠️ $query_name: decode failed")
              fi
            else
              echo "❌ Query execution failed"
              test_results+=("❌ $query_name: execution failed")
            fi
            echo ""
          fi
        done
        
        cd ../../..
        
        echo "📊 QUERY TESTING SUMMARY:"
        for result in "${test_results[@]}"; do
          echo "  $result"
        done
        
        # Check for failures
        if echo "${test_results[*]}" | grep -q "❌"; then
          echo ""
          echo "❌ Some queries failed during testing"
          exit 1
        else
          echo ""
          echo "🎉 All queries executed successfully!"
        fi
        
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: query-pack-test-results
        path: |
          test-*.csv
          test-*.bqrs
          test-src/
